{"version":3,"sources":["assets/cover/cover-image.jpeg","components/About/index.js","components/Nav/index.js","utils/helpers.js","components/Card/index.js","components/Portfolio/index.js","components/Contact/index.js","components/Resume/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","About","className","id","src","coverImage","style","width","alt","Nav","props","pages","currentPage","setCurrentPage","map","page","name","key","onClick","string","charAt","toUpperCase","slice","Card","title","tools","image","link","display","href","target","rel","Portfolio","project","Contact","Resume","Footer","xmlns","height","viewBox","d","aria-hidden","focusable","data-prefix","data-icon","class","role","fill","App","useState","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dff2b23d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cover-image.6a8d6811.jpeg\";","import React from \"react\";\nimport coverImage from \"../../assets/cover/cover-image.jpeg\";\nimport \"./about.css\";\n\nfunction About() {\n  return (\n    <div className=\"grid-container\">\n\n      <section className=\"my-5\">\n        <h1 id=\"about\">About me </h1>\n        <img\n          src={coverImage}\n          className=\"my-2 cover-image\"\n          style={{ width: \"80%\" }}\n          alt=\"cover\"\n        />\n      </section>\n      <section className=\"intro\">\n        Full Stack Web Developer with experience in political science, maritime\n        logistics management, and the consistent ability to adapt new\n        challenges. Adept at problem solving, developed and debugged mobile\n        friendly applications. Recently learned and applied new and unfamiliar\n        technologies quickly within the mern stack e.g. graphql,\n        apollo-server-express & react context api. Enthusiastic team player that\n        has demonstrated a strong desire to implement new and established\n        technologies.\n      </section>\n      \n    </div>\n  );\n}\n\nexport default About;\n","import React from \"react\";\nimport {capitalizeFirstLetter} from '../../utils/helpers';\nimport \"./nav.css\"\n\nconst Nav = (props) => {\n  const { pages = [], currentPage, setCurrentPage } = props;\n  return (\n    <header className=\"flex-row\">\n      <h1> Alex Walker </h1>\n\n      <nav>\n        <ul className=\"flex-row\">\n          {pages.map((page) => (\n            <li\n              className={`mx-1 ${\n                currentPage.name === page.name && `navActive`\n              }`}\n              key={page.name}\n            >\n              <span\n                onClick={() => {\n                  setCurrentPage(page);\n                }}\n              >\n                {capitalizeFirstLetter(page.name)}\n              </span>\n            </li>\n          ))}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default Nav;\n","export function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport function validateEmail(email) {\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}","import React from \"react\";\nimport \"./Card.css\";\n\nexport default function Card({title, tools, image, link }) {\n  return (\n\n    <div className=\"grid-container1\">\n    <a style={{display:\"table-cell\"}} href={link} target=\"_blank\" rel=\"noopener noreferrer\"> \n      <div className=\"card card-1 card-grid\">\n        {/* {title} {image} {tools}  */}\n        <img className=\"img\" src={image}/>\n      </div>\n    </a>\n {/* <Card.Body>\n   <section className=\"card-title\">{title}</section>\n  <section className=\"card-tools\">{tools}</section>\n </Card.Body> */}\n    </div>\n  );\n}\n\n","import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\n// import Button from '@material-ui/core/Button';\nimport \"./portfolio.css\"\nimport Card from \"../Card\";\n\nexport default function Portfolio() {\n  const projects = [\n    \n    {\n      title: \"Shelter Connect\",\n      image: \"screenshot.jpg\", //default image paths in public are recognized by React so no need to write path if image is in public\n      tools: \"NodeJs, Mysql2\",\n      link:\"https://shelter-connection.herokuapp.com/\"\n      \n    },\n    {\n      title: \"Covid-19 Data\",\n      image: \"screenshot2.png\",\n      tools: \"NodeJs, Express Js, Heroku\",\n      link:\"https://covid-19-data-data.herokuapp.com/\"\n      \n    },\n    {\n      title: \"What's in your Fridge?\",\n      image: \"fridge.JPG\",\n      tools: \"NodeJs,MERN\",\n      link:\"https://whats-in-your-fridge-project3.herokuapp.com/\"\n      \n    }\n    // {\n    //   title: \"Shelter Connect\",\n    //   image: \"path here\",\n    //   tools: \"NodeJs\",\n    //   link:\"https://shelter-connection.herokuapp.com/\"\n      \n    // },\n  ];\n  return (\n\n<div className=\"grid\">\n {projects.map(project => {\n            return <Card {...project} key={project.title} />\n\n            \n            \n            \n  })}\n    \n          </div>\n  )\n\n  // jsx img src links href and css grid\n  // return div cards  in responsive grid layout\n}\n","import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { validateEmail } from \"../../utils/helpers\";\n\n// import  render  from \"@testing-library/react\";\n//I need to use useEffect hooks for this cant use props\n// export default function Contact() {\n//   const [errorMessage, setErrorMessage] = useState(\"\");\n\n//   const [formState, setFormState] = useState({\n//     name: \"\",\n//     email: \"\",\n//     message: \"\",\n//   });\n\n//   const { name, email, message } = formState;\n//   const [sendEmail, setSendEmail] = useState();\n// //useEffect\n// useEffect(() => {\n\n//   function handleSubmit(e) {\n//     e.preventDefault();\n//     axios({\n//       method: \"POST\",\n//       url: \"http://localhost:3001/send\", //look up port# //\n//       data: this.state,\n//     }).then((response) => {\n//       if (response.data.status === \"success\") {\n//         alert(\"Message Sent!\");\n//         this.resetForm();\n//       } else if (response.data.status === \"fail\") {\n//         alert(\"Message failed to send.\");\n//       }\n//     });\n//     // console.log(formState);\n//   }\n// })\n\n//   function handleChange(e) {\n//     if (e.target.name === \"email\") {\n//       const isValid = validateEmail(e.target.value);\n//       console.log(isValid);\n//       //is valid conditional statement\n//       if (!isValid) {\n//         setErrorMessage(\"Your email is invalid\");\n//       } else {\n//         setErrorMessage(\"\");\n//       }\n//     } else {\n//       if (!e.target.value.length) {\n//         setErrorMessage(`${e.target.name} is required.`);\n//       } else {\n//         setErrorMessage(\"\");\n//       }\n//     }\n\n//     // console.log('errorMessage', errorMessage);\n//     if (!errorMessage) {\n//       setFormState({ ...formState, [e.target.name]: e.target.value });\n//     }\n//   }\n//   // console.log(formState);\n\n//   // completed handleSubmit(e) function via mailtrap documentation  https://blog.mailtrap.io/react-contact-form/#Using_Expressjs_Nodemailer\n\n//   function resetForm() {\n//     this.setState({ name: \"\", email: \"\", message: \"\" });\n//   }\n\nfunction Contact() {\n  return (\n    <section>\n      <h1>Contact</h1>\n\n      <ul>\n        <li>\n          <a href=\"mailto:awalker0@gmail.com\">Email</a>\n        </li>\n\n        <li>\n          <a href=\"tel:707-515-8673\">Phone:707-515-8673</a>\n        </li>\n      </ul>\n      {/* <h1 data-testid=\"testContact\">Contact me</h1>\n        <form\n          id=\"contact-form\"\n          onSubmit={this.handleSubmit.bind(this)} //using props here , looks like I need to use usestate hook\n          method=\"POST\"\n        >\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Name:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              defaultValue={name}\n              onBlur={handleChange}\n              name=\"name\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email address:</label>\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              defaultValue={email}\n              name=\"email\"\n              onBlur={handleChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"message\">Message:</label>\n            <textarea\n              name=\"message\"\n              className=\"form-control\"\n              defaultValue={message}\n              onBlur={handleChange}\n              row=\"5\"\n            />\n          </div>\n          {errorMessage && (\n            <div>\n              <p className=\"error-text\">{errorMessage}</p>\n            </div>\n          )}\n          <button data-testid=\"testButton\" type=\"submit\">\n            Submit\n          </button>\n        </form> */}\n    </section>\n  );\n}\n\nexport default Contact;\n","import React, { useState } from \"react\";\n\n// import { Document, Page, pdfjs } from \"react-pdf\";\n// import cv from \"./_Alex Walker CV.pdf\";\n// import \"./resume.css\"\n\n// pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nexport default function Resume() {\n  // const [numPages, setNumPages] = useState(null);\n  // const [pageNumber, setPageNumber] = useState(1);\n\n  // function onDocumentLoadSuccess({ numPages }) {\n  //   setNumPages(numPages);\n  // }\n\n  return (\n    <section>\n      <h1>Languages</h1>\n      <ul>\n        <li>Javascript</li>\n        <li>JQuery</li>\n        <li>HTML5</li>\n        <li>CSS3</li>\n      </ul>\n      <h1>Applications</h1>\n      <ul>\n        <li>NodeJs</li>\n        <li>Mysql2</li>\n        <li>Sqlite3</li>\n        <li>Bootstrap</li>\n        <li>Handlebars</li>\n        <li>MongoDB</li>\n        <li>Mongoose</li>\n        <li>Gitbash</li>\n        <li>ExpressJS</li>\n        <li>React</li>\n        <li>MERN</li>\n        <li>GraphQL</li>\n      </ul>\n    </section>\n    \n  )\n    \n}\n\n// <div>\n//   {/* <Document file={cv} onLoadSuccess={onDocumentLoadSuccess} >\n//     <Page pageNumber={pageNumber} />\n//     <Page pageNumber={setPageNumber}/>\n//   </Document>\n//   <p>\n//      {/* Page {pageNumber} of {numPages}  */}\n//   {/* </p> */} */}\n// </div>\n","import React from 'react'\nimport \"./footer.css\"\n\nexport default function Footer() {\n    return (\n        <div className=\"icon-1\">\n           <a href=\"https://github.com/Walker-Walker\" target=\"_blank\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\"/></svg>\n         </a>\n         <a href=\"https://www.linkedin.com/in/alex-walker-b2984015/\" target=\"_blank\">\n         <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\"  aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fab\" data-icon=\"linkedin\" class=\"svg-inline--fa fa-linkedin fa-w-14\" role=\"img\" viewBox=\"0 0 448 512\"><path fill=\"black\" d=\"M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z\"/></svg>\n         </a>\n        </div>\n    )\n}\n\n","import React, { useState } from \"react\";\nimport About from \"./components/About\";\nimport Nav from \"./components/Nav\";\nimport Portfolio from \"./components/Portfolio\"\nimport Contact from \"./components/Contact\"\nimport Resume from \"./components/Resume\"\nimport Footer from \"./components/Footer\"\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// require('dotenv').config()\n// import logo from './logo.svg';\n\nfunction App() {\n  const [pages] = useState([\n    {\n      name: \"about me\",\n      page: <About />\n    },\n    {\n      name: \"portfolio\",\n      page: <Portfolio />\n    },\n    {\n      name: \"contact\",\n      page: <Contact />\n    },\n    {\n      name: \"resume\",\n      page: <Resume />\n    },\n  ]);\n\n  const [currentPage, setCurrentPage] = useState(pages[0]);\n\n  // function displayPage() {\n  //   switch (currentPage.name) {\n  //     case \"about me\":\n  //       return <About />;\n\n  //     case \"portfolio\":\n  //       return <Portfolio />;\n\n  //     case 'resume':\n  //     return <Resume/>;\n\n  //     case 'contact':\n  //     return <Contact/>;\n\n  //     default: // defensive programming used to redirect user if information is missing or whatever scenario\n  //       return <About />;\n  //   }\n  // }\n\n  return (\n    <div>\n      <Nav\n        pages={pages}\n        currentPage={currentPage}\n        setCurrentPage={setCurrentPage}\n      />\n      <main>\n        {currentPage.page}\n      </main>\n      <Footer />\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import AppTest from './AppTest';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}